@model ST.App.Features.Billing.ViewModels.BillingProfileEditViewModel
@{
    ViewData["Title"] = "Fatura Profilini Düzenle";
}

@* Sayfa Başlığı ve Breadcrumb *@
<div class="card mb-5">
    <div class="card-body">
        <div class="d-flex flex-wrap flex-stack">
            <div class="d-flex flex-column justify-content-center flex-wrap me-3">
                <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">
                    @ViewData["Title"]</h1>
                <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                    <li class="breadcrumb-item text-muted">
                        <a asp-controller="Home" asp-action="Index" class="text-muted text-hover-primary">Anasayfa</a>
                    </li>
                    <li class="breadcrumb-item"><span class="bullet bg-gray-400 w-5px h-2px"></span></li>
                    <li class="breadcrumb-item text-muted">
                        <a asp-controller="BillingProfile" asp-action="Index"
                            class="text-muted text-hover-primary">Fatura Profilleri</a>
                    </li>
                    <li class="breadcrumb-item"><span class="bullet bg-gray-400 w-5px h-2px"></span></li>
                    <li class="breadcrumb-item text-dark">Düzenle</li>
                </ul>
            </div>
            <div class="d-flex align-items-center py-1">
                <a asp-controller="BillingProfile" asp-action="Index" class="btn btn-sm btn-light-primary">
                    <i class="ki-duotone ki-arrow-left fs-3"><span class="path1"></span><span class="path2"></span></i>
                    Listeye Geri Dön
                </a>
            </div>
        </div>
    </div>
</div>

@* Form Alanı *@
<div class="card">
    <div class="card-body">
        <form id="billing_profile_edit_form" asp-action="Edit" asp-controller="BillingProfile" method="post"
            class="form">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger d-none"></div>
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" />

            <h3 class="fs-5 fw-bold mb-5">Fatura Tipi</h3>
            <div class="row">
                <div class="col-md-12 fv-row mb-7">
                    <label asp-for="BillingAccountType" class="required form-label fs-7 fw-semibold"></label>
                    <select asp-for="BillingAccountType" asp-items="Model.BillingAccountTypeList"
                        class="form-select form-select-sm" data-control="select2" data-hide-search="true"
                        data-placeholder="Fatura türünü seçiniz...">
                    </select>
                    <span asp-validation-for="BillingAccountType"
                        class="fv-plugins-message-container invalid-feedback fs-8"></span>
                </div>
            </div>

            <div class="separator separator-dashed my-6"></div>

            <h3 class="fs-5 fw-bold mb-5">İletişim ve Adres Bilgileri</h3>
            <div class="row">
                <div class="col-md-6 fv-row mb-4">
                    <label asp-for="Email" class="required form-label fs-7 fw-semibold"></label>
                    <input asp-for="Email" type="email" class="form-control form-control-sm" />
                    <span asp-validation-for="Email" class="fv-plugins-message-container invalid-feedback fs-8"></span>
                </div>
                <div class="col-md-6 fv-row mb-4">
                    <label asp-for="PhoneNumber" class="form-label fs-7 fw-semibold"></label>
                    <input asp-for="PhoneNumber" class="form-control form-control-sm" placeholder="Örn: 5xxxxxxxxx" />
                    <span asp-validation-for="PhoneNumber"
                        class="fv-plugins-message-container invalid-feedback fs-8"></span>
                </div>
            </div>

            <div class="fv-row mb-4">
                <label asp-for="Address" class="required form-label fs-7 fw-semibold"></label>
                <textarea asp-for="Address" class="form-control form-control-sm" rows="3"></textarea>
                <span asp-validation-for="Address" class="fv-plugins-message-container invalid-feedback fs-8"></span>
            </div>

            <div class="row">
                <div class="col-md-4 fv-row mb-4">
                    <label asp-for="CityId" class="required form-label fs-7 fw-semibold"></label>
                    <select asp-for="CityId" asp-items="Model.CityList" class="form-select form-select-sm"
                        data-control="select2" data-placeholder="İl seçiniz...">
                        <option></option>
                    </select>
                    <span asp-validation-for="CityId" class="fv-plugins-message-container invalid-feedback fs-8"></span>
                </div>
                <div class="col-md-4 fv-row mb-4">
                    <label asp-for="DistrictId" class="required form-label fs-7 fw-semibold"></label>
                    <select asp-for="DistrictId" asp-items="Model.DistrictList" class="form-select form-select-sm"
                        data-control="select2" data-placeholder="Önce il seçiniz...">
                        <option></option>
                    </select>
                    <span asp-validation-for="DistrictId"
                        class="fv-plugins-message-container invalid-feedback fs-8"></span>
                </div>
                <div class="col-md-4 fv-row mb-4">
                    <label asp-for="PostalCode" class="required form-label fs-7 fw-semibold"></label>
                    <input asp-for="PostalCode" class="form-control form-control-sm" />
                    <span asp-validation-for="PostalCode"
                        class="fv-plugins-message-container invalid-feedback fs-8"></span>
                </div>
            </div>

            <div class="separator separator-dashed my-6"></div>

            <div id="individualFields" style="display:none;">
                <h3 class="fs-5 fw-bold mb-5">Bireysel Bilgiler</h3>
                <div class="row">
                    <div class="col-md-6 fv-row mb-4">
                        <label asp-for="IndividualFirstName" class="required form-label fs-7 fw-semibold"></label>
                        <input asp-for="IndividualFirstName" class="form-control form-control-sm" />
                        <span asp-validation-for="IndividualFirstName"
                            class="fv-plugins-message-container invalid-feedback fs-8"></span>
                    </div>
                    <div class="col-md-6 fv-row mb-4">
                        <label asp-for="IndividualLastName" class="required form-label fs-7 fw-semibold"></label>
                        <input asp-for="IndividualLastName" class="form-control form-control-sm" />
                        <span asp-validation-for="IndividualLastName"
                            class="fv-plugins-message-container invalid-feedback fs-8"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 fv-row mb-4">
                        <label asp-for="IndividualIdentityNumber" class="required form-label fs-7 fw-semibold"></label>
                        <input asp-for="IndividualIdentityNumber" class="form-control form-control-sm" />
                        <span asp-validation-for="IndividualIdentityNumber"
                            class="fv-plugins-message-container invalid-feedback fs-8"></span>
                    </div>
                </div>
            </div>

            <div id="corporateFields" style="display:none;">
                <h3 class="fs-5 fw-bold mb-5">Kurumsal Bilgiler</h3>
                <div class="row">
                    <div class="col-md-12 fv-row mb-4">
                        <label asp-for="CorporateCompanyName" class="required form-label fs-7 fw-semibold"></label>
                        <input asp-for="CorporateCompanyName" class="form-control form-control-sm" />
                        <span asp-validation-for="CorporateCompanyName"
                            class="fv-plugins-message-container invalid-feedback fs-8"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 fv-row mb-4">
                        <label asp-for="CorporateTaxOffice" class="required form-label fs-7 fw-semibold"></label>
                        <input asp-for="CorporateTaxOffice" class="form-control form-control-sm" />
                        <span asp-validation-for="CorporateTaxOffice"
                            class="fv-plugins-message-container invalid-feedback fs-8"></span>
                    </div>
                    <div class="col-md-6 fv-row mb-4">
                        <label asp-for="CorporateTaxNumber" class="required form-label fs-7 fw-semibold"></label>
                        <input asp-for="CorporateTaxNumber" class="form-control form-control-sm" />
                        <span asp-validation-for="CorporateTaxNumber"
                            class="fv-plugins-message-container invalid-feedback fs-8"></span>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-end pt-5">
                <a asp-action="Index" class="btn btn-sm btn-light me-3">İptal</a>
                <button type="submit" id="billing_profile_submit_btn" class="btn btn-sm btn-primary">
                    <span class="indicator-label">Güncelle</span>
                    <span class="indicator-progress">Lütfen bekleyin...
                        <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    </span>
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        "use strict";

        $(document).ready(function () {

            const form = document.getElementById('billing_profile_edit_form');
            const submitButton = document.getElementById('billing_profile_submit_btn');
            if (!form || !submitButton) { return; }

            const individualFields = document.getElementById('individualFields');
            const corporateFields = document.getElementById('corporateFields');
            const billingAccountTypeSelect = $('[name="BillingAccountType"]');
            const citySelect = $('[name="CityId"]');
            const districtSelect = $('[name="DistrictId"]');

            let validator;

            const initValidation = function () {
                validator = FormValidation.formValidation(
                    form,
                    {
                        fields: {
                            'BillingAccountType': { validators: { notEmpty: { message: 'Fatura tipi seçimi zorunludur.' } } },
                            'Email': { validators: { notEmpty: { message: 'E-posta adresi zorunludur.' }, emailAddress: { message: 'Geçerli bir e-posta adresi giriniz.' } } },
                            'Address': { validators: { notEmpty: { message: 'Adres zorunludur.' } } },
                            'CityId': { validators: { notEmpty: { message: 'İl seçimi zorunludur.' } } },
                            'DistrictId': { validators: { notEmpty: { message: 'İlçe seçimi zorunludur.' } } },
                            'PostalCode': { validators: { notEmpty: { message: 'Posta Kodu zorunludur.' }, digits: { message: 'Lütfen sadece rakam giriniz.' }, stringLength: { min: 5, max: 5, message: 'Posta kodu 5 haneli olmalıdır.' } } },
                        },
                        plugins: {
                            trigger: new FormValidation.plugins.Trigger(),
                            bootstrap: new FormValidation.plugins.Bootstrap5({ rowSelector: '.fv-row', eleInvalidClass: '', eleValidClass: '' }),
                            submitButton: new FormValidation.plugins.SubmitButton(),
                        }
                    }
                );
            };

            const handleEvents = function () {

                submitButton.addEventListener('click', function (e) {
                    e.preventDefault();

                    if (validator) {
                        validator.validate().then(function (status) {
                            if (status == 'Valid') {
                                submitButton.setAttribute('data-kt-indicator', 'on');
                                submitButton.disabled = true;
                                form.submit();
                            } else {
                                Swal.fire({
                                    text: "Formda eksik veya hatalı alanlar var, lütfen kontrol edin.",
                                    icon: "error",
                                    buttonsStyling: false,
                                    confirmButtonText: "Tamam",
                                    customClass: { confirmButton: "btn btn-primary" }
                                });
                            }
                        });
                    }
                });

                billingAccountTypeSelect.on('change', function () {
                    const selectedType = $(this).val();

                    if (selectedType == '@((int)ST.Domain.Enums.BillingAccountType.Individual)') {
                        individualFields.style.display = 'block';
                        corporateFields.style.display = 'none';
                        validator.addField('IndividualFirstName', { validators: { notEmpty: { message: 'Ad alanı zorunludur.' } } });
                        validator.addField('IndividualLastName', { validators: { notEmpty: { message: 'Soyad alanı zorunludur.' } } });
                        validator.addField('IndividualIdentityNumber', { validators: { notEmpty: { message: 'TC Kimlik Numarası zorunludur.' }, stringLength: { min: 11, max: 11, message: 'TC Kimlik Numarası 11 haneli olmalıdır.' }, digits: { message: 'Lütfen sadece rakam giriniz.' } } });
                        validator.removeField('CorporateCompanyName');
                        validator.removeField('CorporateTaxOffice');
                        validator.removeField('CorporateTaxNumber');
                    } else if (selectedType == '@((int)ST.Domain.Enums.BillingAccountType.Corporate)') {
                        individualFields.style.display = 'none';
                        corporateFields.style.display = 'block';
                        validator.addField('CorporateCompanyName', { validators: { notEmpty: { message: 'Şirket Adı zorunludur.' } } });
                        validator.addField('CorporateTaxOffice', { validators: { notEmpty: { message: 'Vergi Dairesi zorunludur.' } } });
                        validator.addField('CorporateTaxNumber', { validators: { notEmpty: { message: 'Vergi Numarası zorunludur.' }, stringLength: { min: 10, max: 11, message: 'Vergi Numarası 10 veya 11 haneli olmalıdır.' }, digits: { message: 'Lütfen sadece rakam giriniz.' } } });
                        validator.removeField('IndividualFirstName');
                        validator.removeField('IndividualLastName');
                        validator.removeField('IndividualIdentityNumber');
                    } else {
                        individualFields.style.display = 'none';
                        corporateFields.style.display = 'none';
                        validator.removeField('IndividualFirstName');
                        validator.removeField('IndividualLastName');
                        validator.removeField('IndividualIdentityNumber');
                        validator.removeField('CorporateCompanyName');
                        validator.removeField('CorporateTaxOffice');
                        validator.removeField('CorporateTaxNumber');
                    }
                });

                citySelect.on('change', function () {
                    const cityId = $(this).val();

                    districtSelect.empty().append('<option></option>').val('').trigger('change');
                    districtSelect.prop("disabled", true);

                    if (cityId) {
                        $.ajax({
                            url: '@Url.Action("GetDistricts", "Lookup")',
                            type: 'GET',
                            data: { cityId: cityId },
                            success: function (data) {
                                districtSelect.prop("disabled", false);
                                if (data && data.length > 0) {
                                    $.each(data, function (i, item) {
                                        districtSelect.append($('<option>', {
                                            value: item.value,
                                            text: item.text
                                        }));
                                    });
                                }
                            }
                        }).always(function () {
                            districtSelect.trigger('change');
                            validator.revalidateField('DistrictId');
                        });
                    }
                });
            };

            initValidation();
            handleEvents();

            billingAccountTypeSelect.trigger('change');
        });
    </script>
}